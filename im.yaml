########
# Copyright (c) 2018 MSO4SC - vsande@cesga.es, javier.carnero@atos.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

node_types:
    im.nodes.Server:
        derived_from: cloudify.nodes.Compute
        properties:
            config:
                description: credentials, timezone and workload manager
            resource_id:
                description: id of the resource
            use_external_resource:
                description: true to use an already created server
                type: boolean
                default: false
            simulate:
                description: Set to true to simulate job without sending it
                type: boolean
                default: false
            agent_config: # This is mandatory, to say cloudify that we are not installing an agent
                default:
                    install_method: none
        interfaces:
            cloudify.interfaces.lifecycle:
                create:
                    implementation: scripts/nodes/server/create.py
                    inputs:
                        config:
                            default: { get_property: [SELF, config] }
                        simulate:
                            default: { get_property: [SELF, simulate] }
                configure:
                    implementation: scripts/nodes/server/configure.py
                    inputs:
                        config:
                            default: { get_property: [SELF, config] }
                        simulate:
                            default: { get_property: [SELF, simulate] }
                start:
                    implementation: scripts/nodes/server/start.py
                    inputs:
                        config:
                            default: { get_property: [SELF, config] }
                        simulate:
                            default: { get_property: [SELF, simulate] }

                stop:
                    implementation: scripts/nodes/server/stop.py
                    inputs:
                        config:
                            default: { get_property: [SELF, config] }
                        simulate:
                            default: { get_property: [SELF, simulate] }
                delete:
                    implementation: scripts/nodes/server/delete.py
                    inputs:
                        config:
                            default: { get_property: [SELF, config] }
                        simulate:
                            default: { get_property: [SELF, simulate] }

    im.nodes.Network:
        derived_from: cloudify.nodes.Compute
        properties:
            name:
                description: Name or ID of the resource
            config:
                description: credentials, timezone and workload manager
            resource_id:
                description: id of the resource
            use_external_resource:
                description: true to use an already created server
                type: boolean
                default: false
            simulate:
                description: Set to true to simulate job without sending it
                type: boolean
                default: False
            agent_config: # This is mandatory, to say cloudify that we are not installing an agent
                default:
                    install_method: none
        interfaces:
            cloudify.interfaces.lifecycle:
                configure:
                    implementation: scripts/nodes/network/configure.py
                    inputs:
                        config:
                            default: { get_property: [SELF, config] }
                        simulate:
                            default: { get_property: [SELF, simulate] }

    im.nodes.Image:
        derived_from: cloudify.nodes.Compute
        properties:
            name:
                description: Name or ID of the resource
            config:
                description: credentials, timezone and workload manager
            resource_id:
                description: id of the resource
            use_external_resource:
                description: true to use an already created server
                type: boolean
                default: false
            simulate:
                description: Set to true to simulate job without sending it
                type: boolean
                default: False
            agent_config: # This is mandatory, to say cloudify that we are not installing an agent
                default:
                    install_method: none
        interfaces:
            cloudify.interfaces.lifecycle:
                configure:
                    implementation: scripts/nodes/image/configure.py
                    inputs:
                        config:
                            default: { get_property: [SELF, config] }
                        simulate:
                            default: { get_property: [SELF, simulate] }

    im.nodes.Flavour:
        derived_from: cloudify.nodes.Compute
        properties:
            name:
                description: Name or ID of the resource
            config:
                description: credentials, timezone and workload manager
            resource_id:
                description: id of the resource
            use_external_resource:
                description: true to use an already created server
                type: boolean
                default: false
            simulate:
                description: Set to true to simulate job without sending it
                type: boolean
                default: False
            agent_config: # This is mandatory, to say cloudify that we are not installing an agent
                default:
                    install_method: none
        interfaces:
            cloudify.interfaces.lifecycle:
                configure:
                    implementation: scripts/nodes/flavour/configure.py
                    inputs:
                        config:
                            default: { get_property: [SELF, config] }
                        simulate:
                            default: { get_property: [SELF, simulate] }


    im.nodes.Software:
        derived_from: cloudify.nodes.Compute
        properties:
            name:
                description: Name or ID of the application
            config:
                description: credentials, timezone and workload manager
            resource_id:
                description: id of the resource
            use_external_resource:
                description: true to use an already created server
                type: boolean
                default: false
            simulate:
                description: Set to true to simulate job without sending it
                type: boolean
                default: False
            agent_config: # This is mandatory, to say cloudify that we are not installing an agent
                default:
                    install_method: none
        interfaces:
            cloudify.interfaces.lifecycle:
                configure:
                    implementation: scripts/nodes/software/configure.py
                    inputs:
                        config:
                            default: { get_property: [SELF, config] }
                        simulate:
                            default: { get_property: [SELF, simulate] }

relationships:
    depends_on_setting: # relationship to define to which server the other objects belongs (e.g. network)
        derived_from: cloudify.relationships.depends_on
        source_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                preconfigure:
                    implementation: scripts/relationships/depends_on_setting/preconfigure.py
                    inputs:
                        config: 
                            default: { get_property: [TARGET, config] }
                        simulate:
                            default: { get_property: [TARGET, simulate] }
